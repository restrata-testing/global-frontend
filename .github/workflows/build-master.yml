name: QA Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      # - name: Add ARTIFACT_VERSION env property with commit short sha
      #   run: |
      #     export TIME_STAMP=$(date +%Y%m%d-%H%M)
      #     export ARTIFACT_VERSION=${TIME_STAMP}
      #     echo "ARTIFACT_VERSION=${TIME_STAMP}" >> ${GITHUB_ENV}
      #     echo "RELEASE_TAG=${ARTIFACT_VERSION}-qa" >> ${GITHUB_ENV}
      #     echo "ARTIFACT_VERSION=${ARTIFACT_VERSION}" >> ${GITHUB_STEP_SUMMARY}
      #     echo "Image Tag - $ARTIFACT_VERSION"

      # - name: Configure AWS Credentials
      #   if: success()
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_GLOBAL }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_GLOBAL }}
      #     aws-region: ${{ secrets.AWS_REGION_GLOBAL }}

      # - name: Login to Amazon ECR
      #   uses: aws-actions/amazon-ecr-login@v2
      #   id: login-ecr
      #   with:
      #     mask-password: true

      # - name: Setup Node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 18

      # - name: Install Node dependencies
      #   run: yarn install --production

      # - name: Build static bundles
      #   env:
      #     REACT_APP_MAPBOX_ACCESS_TOKEN: ${{ secrets.REACT_APP_MAPBOX_ACCESS_TOKEN }}
      #     REACT_APP_REST_ENDPOINT: https://global-qa.restrata.net/
      #     REACT_APP_DATA_DOG_CLIENT_ID: ${{ secrets.REACT_APP_DATA_DOG_CLIENT_ID }}
      #     REACT_APP_UNIFIED_EXPERIENCE_URL: 'https://global-platform-qa.restrata.net'
      #     REACT_APP_OUTSYSTEMS_GLOBAL_DASHBOARD_URL: 'https://tst.solutions.restrata.net/RestrataGlobalDashboard/JavaSSO'
      #     REACT_APP_OUTSYSTEMS_SITES_URL: 'https://tst.solutions.restrata.net/Restrata_Portal/Sites.aspx/JavaSSO'
      #     REACT_APP_TINYMCE_EDITOR_SRC: ${{ secrets.REACT_APP_TINYMCE_EDITOR_SRC }}
      #     REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_SENTRY_DSN }}
      #     REACT_APP_AERIS_ID: ${{ secrets.REACT_APP_AERIS_ID }}
      #     REACT_APP_AERIS_KEY: ${{ secrets.REACT_APP_AERIS_KEY }}
      #     REACT_APP_PDF_ENDPOINT_TOKEN: ${{ secrets.REACT_APP_PDF_ENDPOINT_TOKEN }}
      #     NODE_OPTIONS: '--max_old_space_size=4096'
      #   run: yarn build

      # - name: Docker Build & Push to ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #   if: success()
      #   run: |
      #     docker build . -t $ECR_REGISTRY/restrata/global/global-frontend
      #     docker tag $ECR_REGISTRY/restrata/global/global-frontend:latest $ECR_REGISTRY/restrata/global/global-frontend:${ARTIFACT_VERSION}
      #     docker push $ECR_REGISTRY/restrata/global/global-frontend:latest
      #     docker push $ECR_REGISTRY/restrata/global/global-frontend:${ARTIFACT_VERSION}

      # - name: Update Kubeconfig
      #   if: success()
      #   run: aws eks --region ${{ secrets.AWS_REGION_GLOBAL }} update-kubeconfig --name ${{ secrets.GLOBAL_EKS_NAME }}

      # - name: Generate Previous Tag
      #   run: |
      #     export PREVIOUS_VERSION=$(helm get values frontend -ojson -n qa | jq -r '.image.tag')
      #     echo "Previous Version is $PREVIOUS_VERSION"
      #     echo "PREVIOUS_VERSION=$PREVIOUS_VERSION" >> ${GITHUB_ENV}

      # - name: Deploy to EKS
      #   if: success()
      #   run: |
      #     helm upgrade --install frontend --set image.tag=${ARTIFACT_VERSION} --set nodeSelector.environment=qa .k8s/global-frontend -n qa --wait

      # - name: Create Release
      #   if: success()
      #   id: create_release
      #   uses: Restrata-Platform-v2/create-release@main
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      #   with:
      #     tag_name: ${{ env.RELEASE_TAG }}
      #     release_name: ${{ env.RELEASE_TAG }} - ${{ github.event.head_commit.message }}
      #     body: |
      #       Automated release
      #     draft: false
      #     prerelease: false

      - name: Fetch the code
        uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 0

      - name: Generate Changelog
        uses: Restrata-Platform-v2/jira-github-changelog@main
        id: changelog
        with:
          head: "20250623-0931-qa"
          base: "20250620-1402-qa"
          jira-code: '(RP|RO)'
          jira-host: restrataplatform.atlassian.net
          jira-username: 'csiriwardhana@restrata.com'
          jira-password: ${{secrets.JIRA_TOKEN}}
          pdf: false
          unshallow: false

      - name: Generate Changelog.md file
        run: |
          export SUMMARY=$(echo "${{ steps.changelog.outputs.markdown }}")
          DATE=$(date '+%Y-%m-%d')
          printf "$SUMMARY"
          printf "\n\n" >> changelog/CHANGELOG.md
          printf "# Release Version Global Frontend - $ARTIFACT_VERSION\n" >> changelog/CHANGELOG.md
          printf "## Release Environment QA - $ARTIFACT_VERSION\n" >> changelog/CHANGELOG.md
          printf "## Release Date - ${DATE}\n" >> changelog/CHANGELOG.md

          printf "$SUMMARY" >> changelog/CHANGELOG.md
          printf "$SUMMARY" >> $GITHUB_STEP_SUMMARY

      # - name: Send mail
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     server_address: ${{secrets.MAIL_SERVER_ADDRESS}}
      #     server_port: ${{secrets.MAIL_PORT}}
      #     secure: true
      #     username: ${{secrets.MAIL_USERNAME}}
      #     password: ${{secrets.MAIL_PASSWORD}}
      #     subject: Github Actions Release Note (Global Frontend)
      #     to: csiriwardhana@restrata.com,nabeysiriwardana@restrata.com,cmalimage@restrata.com,kjayakody@restrata.com
      #     from: No Reply <no-reply@restrata.com>
      #     html_body: file://changelog/CHANGELOG.md
      #     convert_markdown: true

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          commit-message: Update Changelog
          committer: github-action-bot <github-action-bot@noreply.github.com>
          author: github-action-bot <github-action-bot@noreply.github.com>
          signoff: false
          branch: changelog-dev
          delete-branch: true
          title: 'Update Changelog'
          body: 'Update Changelog'
          draft: false
